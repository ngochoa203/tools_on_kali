## Set values
set fish_greeting
set VIRTUAL_ENV_DISABLE_PROMPT "1"
set -x SHELL /usr/bin/fish

# Use bat for man pages
set -xU MANPAGER "sh -c 'col -bx | bat -l man -p'"
set -xU MANROFFOPT "-c"

# Hint to exit PKGBUILD review in Paru
set -x PARU_PAGER "less -P \"Press 'q' to exit the PKGBUILD review.\""

## Export variable need for qt-theme
if type "qtile" >> /dev/null 2>&1
    set -x QT_QPA_PLATFORMTHEME "qt5ct"
end

# Set settings for https://github.com/franciscolourenco/done
set -U __done_min_cmd_duration 10000
set -U __done_notification_urgency_level low

## Environment setup
if test -f ~/.fish_profile
    source ~/.fish_profile
end

# Add ~/.local/bin to PATH
if test -d ~/.local/bin
    if not contains -- ~/.local/bin $PATH
        set -p PATH ~/.local/bin
    end
end

# Add depot_tools to PATH
if test -d ~/Applications/depot_tools
    if not contains -- ~/Applications/depot_tools $PATH
        set -p PATH ~/Applications/depot_tools
    end
end

## Starship prompt
if status --is-interactive
    source ("/usr/bin/starship" init fish --print-full-init | psub)
end

## Advanced command-not-found hook
source /usr/share/doc/find-the-command/ftc.fish

# Bang-bang plugin (history expansion)
function __history_previous_command
    switch (commandline -t)
        case "!"
            commandline -t $history[1]; commandline -f repaint
        case "*"
            commandline -i !
    end
end

function __history_previous_command_arguments
    switch (commandline -t)
        case "!"
            commandline -t ""
            commandline -f history-token-search-backward
        case "*"
            commandline -i '$'
    end
end

if [ "$fish_key_bindings" = fish_vi_key_bindings ];
    bind -Minsert ! __history_previous_command
    bind -Minsert '$' __history_previous_command_arguments
else
    bind ! __history_previous_command
    bind '$' __history_previous_command_arguments
end

# Fish command history
function history
    builtin history --show-time='%F %T '
end

function backup --argument filename
    cp $filename $filename.bak
end

# Copy DIR1 DIR2
function copy
    set count (count $argv | tr -d \n)
    if test "$count" = 2; and test -d "$argv[1]"
        set from (echo $argv[1] | string trim --right --chars=/)
        set to (echo $argv[2])
        command cp -r $from $to
    else
        command cp $argv
    end
end

# Cleanup orphan packages (corrected)
function cleanup
    while pacman -Qdtq
        sudo pacman -Rns (pacman -Qdtq)
        or break
    end
end

## Useful aliases

# Replace ls with eza
alias ls 'eza -al --color=always --group-directories-first --icons'
alias lsz 'eza -al --color=always --total-size --group-directories-first --icons'
alias la 'eza -a --color=always --group-directories-first --icons'
alias ll 'eza -l --color=always --group-directories-first --icons'
alias lt 'eza -aT --color=always --group-directories-first --icons'
alias l. 'eza -ald --color=always --group-directories-first --icons .*'

# Replace common tools
alias cat='bat --style header --style snip --style changes --style header'
if not test -x /usr/bin/yay; and test -x /usr/bin/paru
    alias yay='paru'
end

# Directory shortcuts
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

# System utilities
alias big='expac -H M "%m\t%n" | sort -h | nl'
alias dir='dir --color=auto'
alias fixpacman='sudo rm /var/lib/pacman/db.lck'
alias gitpkg='pacman -Q | grep -i "\-git" | wc -l'
alias grep='ugrep --color=auto'
alias egrep='ugrep -E --color=auto'
alias fgrep='ugrep -F --color=auto'
alias grubup='sudo update-grub'
alias hw='hwinfo --short'
alias ip='ip -color'
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
alias rmpkg='sudo pacman -Rdd'
alias tarnow='tar -acf '
alias untar='tar -zxvf '
alias upd='/usr/bin/garuda-update'
alias vdir='vdir --color=auto'
alias wget='wget -c'

# Reflector - fastest mirrors
alias mirror='sudo reflector -f 30 -l 30 --number 10 --verbose --save /etc/pacman.d/mirrorlist'
alias mirrora='sudo reflector --latest 50 --number 20 --sort age --save /etc/pacman.d/mirrorlist'
alias mirrord='sudo reflector --latest 50 --number 20 --sort delay --save /etc/pacman.d/mirrorlist'
alias mirrors='sudo reflector --latest 50 --number 20 --sort score --save /etc/pacman.d/mirrorlist'

# Help & info
alias apt='man pacman'
alias apt-get='man pacman'
alias please='sudo'
alias tb='nc termbin.com 9999'
alias helpme='echo "To print basic information about a command use tldr <command>"'
alias pacdiff='sudo -H DIFFPROG=meld pacdiff'
alias jctl='journalctl -p 3 -xb'
alias rip='expac --timefmt="%Y-%m-%d %T" "%l\t%n %v" | sort | tail -200 | nl'

# Dev alias (Git, Python, tools)
alias gs='git status'
alias ga='git add .'
alias gc='git commit'
alias gcm='git commit -m'
alias gp='git push'
alias gl='git pull'
alias gco='git checkout'
alias gb='git branch'
alias gd='git diff'
alias gcl='git clone'

alias py='python3'
alias pipi='pip install'
alias pipa='pip install --upgrade pip'
alias act='source venv/bin/activate'
alias deact='deactivate'
alias cls='clear'
alias nv='nvim'
alias rf='ranger'
alias ports='ss -tulwn'
alias sz='source ~/.config/fish/config.fish'

# Abbreviations
abbr -a gco 'git checkout'
abbr -a gcm 'git commit -m'
abbr -a gst 'git status'
abbr -a gaa 'git add .'
abbr -a gps 'git push'
abbr -a gpl 'git pull'
abbr -a gbr 'git branch'
abbr -a gcl 'git clone'
abbr -a gmerge 'git merge'
abbr -a gdiff 'git diff'
abbr -a please sudo
abbr -a py 'python3'
abbr -a pipi 'pip install'
abbr -a pipa 'pip install --upgrade pip'
abbr -a act 'source venv/bin/activate'
abbr -a deact 'deactivate'
abbr -a nv 'nvim'
abbr -a rf 'ranger'
abbr -a cls 'clear'
abbr -a sz 'source ~/.config/fish/config.fish'
abbr -a tldr 'tldr'

# Welcome message
echo "🎉 Welcome back, Ngọc Hòa!"

# SSH agent auto start & add key
if not set -q SSH_AUTH_SOCK
    eval (ssh-agent -c | string collect)
    set -gx SSH_AUTH_SOCK $SSH_AUTH_SOCK
end

for key in ~/.ssh/id_{rsa,ed25519}
    if test -f $key
        ssh-add -q $key 2>/dev/null
    end
end


# Optional: FNM for Node.js version management (recommended)
if type -q fnm
    fnm env --use-on-cd | source
end

# Fastfetch splash screen
if status --is-interactive && type -q fastfetch
    fastfetch --config dr460nized.jsonc
end

